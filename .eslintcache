[{"C:\\Users\\17034\\Projects\\finsta\\src\\components\\Router.tsx":"1","C:\\Users\\17034\\Projects\\finsta\\src\\routes\\Auth.tsx":"2","C:\\Users\\17034\\Projects\\finsta\\src\\components\\App.tsx":"3","C:\\Users\\17034\\Projects\\finsta\\src\\firebase.js":"4","C:\\Users\\17034\\Projects\\finsta\\src\\index.tsx":"5","C:\\Users\\17034\\Projects\\finsta\\src\\components\\Navigation.tsx":"6","C:\\Users\\17034\\Projects\\finsta\\src\\routes\\Home.tsx":"7","C:\\Users\\17034\\Projects\\finsta\\src\\routes\\Profile.tsx":"8","C:\\Users\\17034\\Projects\\finsta\\src\\components\\Post.tsx":"9","C:\\Users\\17034\\Projects\\finsta\\src\\components\\PostFactory.tsx":"10","C:\\Users\\17034\\Projects\\finsta\\src\\components\\AuthForm.tsx":"11"},{"size":1152,"mtime":1607370375397,"results":"12","hashOfConfig":"13"},{"size":647,"mtime":1607378552863,"results":"14","hashOfConfig":"13"},{"size":1087,"mtime":1607378790687,"results":"15","hashOfConfig":"13"},{"size":772,"mtime":1607031219327,"results":"16","hashOfConfig":"13"},{"size":209,"mtime":1606672865937,"results":"17","hashOfConfig":"13"},{"size":444,"mtime":1607303484867,"results":"18","hashOfConfig":"13"},{"size":868,"mtime":1607378194665,"results":"19","hashOfConfig":"13"},{"size":1105,"mtime":1607378762545,"results":"20","hashOfConfig":"13"},{"size":2022,"mtime":1607298130972,"results":"21","hashOfConfig":"13"},{"size":1984,"mtime":1607378137357,"results":"22","hashOfConfig":"13"},{"size":1839,"mtime":1607378611120,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"144lqlv",{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\17034\\Projects\\finsta\\src\\components\\Router.tsx",[],"C:\\Users\\17034\\Projects\\finsta\\src\\routes\\Auth.tsx",["47","48"],"C:\\Users\\17034\\Projects\\finsta\\src\\components\\App.tsx",[],"C:\\Users\\17034\\Projects\\finsta\\src\\firebase.js",[],"C:\\Users\\17034\\Projects\\finsta\\src\\index.tsx",[],"C:\\Users\\17034\\Projects\\finsta\\src\\components\\Navigation.tsx",["49"],"C:\\Users\\17034\\Projects\\finsta\\src\\routes\\Home.tsx",[],"C:\\Users\\17034\\Projects\\finsta\\src\\routes\\Profile.tsx",["50"],"C:\\Users\\17034\\Projects\\finsta\\src\\components\\Post.tsx",["51","52"],"import React, { useState } from \"react\";\r\nimport { dbService, storageService } from \"../firebase\";\r\n\r\ninterface HomeProps {\r\n  isOwner: boolean,\r\n  postObj: any\r\n}\r\n\r\nconst Post = ({ postObj, isOwner }: HomeProps) => {\r\n  const [editing, setEditing] = useState<boolean>(false);\r\n  const [newPost, setNewPost] = useState(postObj.text);\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok:boolean = window.confirm(\"Are you sure you want to delete this post?\");\r\n    if (ok) {\r\n      await dbService.doc(`posts/${postObj.id}`).delete();\r\n      const res = await storageService.refFromURL(postObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  \r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    await dbService.doc(`posts/${postObj.id}`).update({\r\n      text: newPost,\r\n    });\r\n    setEditing(false);\r\n  };\r\n\r\n  const onChange = async (event) => {\r\n    const {\r\n      target:{ value },\r\n    } = event;\r\n    setNewPost(value);\r\n    await dbService.doc(`posts/${postObj.id}`).update({\r\n      text: newPost\r\n    });\r\n    setNewPost(value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Edit your post\"\r\n              onChange={onChange}\r\n              value={newPost}\r\n              required\r\n            />\r\n            <input type=\"submit\" value=\"Update Post\" />\r\n          </form>\r\n          <button onClick={toggleEditing}>Cancel</button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{postObj.text}</h4>\r\n          {postObj.attachmentUrl && (\r\n            <img src={postObj.attachmentUrl} width=\"50px\" height=\"50px\" />\r\n          )}\r\n          {isOwner && (\r\n            <>\r\n              <button onClick={onDeleteClick}>Delete Post</button>\r\n              <button onClick={toggleEditing}>Edit Post</button>\r\n            </>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post","C:\\Users\\17034\\Projects\\finsta\\src\\components\\PostFactory.tsx",["53"],"C:\\Users\\17034\\Projects\\finsta\\src\\components\\AuthForm.tsx",["54"],{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":25},{"ruleId":"55","severity":1,"message":"59","line":12,"column":11,"nodeType":"57","messageId":"58","endLine":12,"endColumn":15},{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":25},{"ruleId":"60","severity":1,"message":"61","line":5,"column":1,"nodeType":"62","endLine":41,"endColumn":3},{"ruleId":"55","severity":1,"message":"63","line":17,"column":13,"nodeType":"57","messageId":"58","endLine":17,"endColumn":16},{"ruleId":"64","severity":1,"message":"65","line":62,"column":13,"nodeType":"66","endLine":62,"endColumn":75},{"ruleId":"64","severity":1,"message":"65","line":61,"column":11,"nodeType":"66","endLine":61,"endColumn":62},{"ruleId":"67","severity":1,"message":"68","line":7,"column":19,"nodeType":"69","messageId":"70","endLine":7,"endColumn":37},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'res' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected"]