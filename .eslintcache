[{"C:\\Users\\17034\\Projects\\finsta\\src\\routes\\Profile.tsx":"1","C:\\Users\\17034\\Projects\\finsta\\src\\routes\\Auth.tsx":"2","C:\\Users\\17034\\Projects\\finsta\\src\\components\\Navigation.tsx":"3","C:\\Users\\17034\\Projects\\finsta\\src\\components\\Post.tsx":"4","C:\\Users\\17034\\Projects\\finsta\\src\\index.tsx":"5","C:\\Users\\17034\\Projects\\finsta\\src\\components\\AuthForm.tsx":"6","C:\\Users\\17034\\Projects\\finsta\\src\\components\\Router.tsx":"7","C:\\Users\\17034\\Projects\\finsta\\src\\components\\App.tsx":"8","C:\\Users\\17034\\Projects\\finsta\\src\\routes\\Home.tsx":"9","C:\\Users\\17034\\Projects\\finsta\\src\\firebase.js":"10","C:\\Users\\17034\\Projects\\finsta\\src\\components\\PostForm.tsx":"11"},{"size":3702,"mtime":1609001585468,"results":"12","hashOfConfig":"13"},{"size":1197,"mtime":1609115006469,"results":"14","hashOfConfig":"13"},{"size":2194,"mtime":1608516442843,"results":"15","hashOfConfig":"13"},{"size":5395,"mtime":1609120211521,"results":"16","hashOfConfig":"13"},{"size":244,"mtime":1608517335537,"results":"17","hashOfConfig":"13"},{"size":2173,"mtime":1608516442843,"results":"18","hashOfConfig":"13"},{"size":1152,"mtime":1607396867357,"results":"19","hashOfConfig":"13"},{"size":1517,"mtime":1608517399473,"results":"20","hashOfConfig":"13"},{"size":1162,"mtime":1609001567638,"results":"21","hashOfConfig":"13"},{"size":772,"mtime":1608516442847,"results":"22","hashOfConfig":"13"},{"size":2848,"mtime":1609001594407,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"144lqlv",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\17034\\Projects\\finsta\\src\\routes\\Profile.tsx",["47"],"C:\\Users\\17034\\Projects\\finsta\\src\\routes\\Auth.tsx",[],"C:\\Users\\17034\\Projects\\finsta\\src\\components\\Navigation.tsx",[],"C:\\Users\\17034\\Projects\\finsta\\src\\components\\Post.tsx",["48"],"import { useState, useEffect }  from \"react\";\r\nimport { dbService, storageService } from \"../firebase\";\r\nimport \"./post.css\";\r\nimport editLogo from '../graphics/editButton.png';\r\nimport blankProfile from '../graphics/blankProfile.png';\r\n\r\ninterface PostProps {\r\n  isOwner: boolean;\r\n  userUid: any;\r\n  postObj: any;\r\n}\r\n\r\nconst Post = ({ postObj, userUid, isOwner }: PostProps) => {\r\n  const [profilePicture, setProfilePicture] = useState(\"\");\r\n  useEffect(() => {\r\n    getProfilePictureRef();\r\n  }, [])\r\n\r\n  const onDeleteClick = async () => {\r\n    const ok: boolean = window.confirm(\r\n      \"Are you sure you want to delete this post?\"\r\n    );\r\n    if (ok) {\r\n      await dbService.doc(`posts/${postObj.id}`).delete();\r\n      await storageService.refFromURL(postObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n\r\n  const onLikeClick = async () => {\r\n    // add user to likedUsers if the user had not liked the post. If else, then take the user off likedUsers\r\n    let likedUsers = postObj.likedUsers;\r\n    if (likedUsers.includes(userUid)) {\r\n      const index = likedUsers.indexOf(userUid);\r\n      likedUsers.splice(index, 1);\r\n      await dbService.doc(`posts/${postObj.id}`).update({\r\n        likedUsers: likedUsers,\r\n      });\r\n    } else {\r\n      likedUsers.push(userUid);\r\n      await dbService.doc(`posts/${postObj.id}`).update({\r\n        likedUsers: likedUsers,\r\n      });\r\n    }\r\n  };\r\n\r\n  const likeButton = (likedUsers) => {\r\n    if (likedUsers.includes(userUid)) {\r\n      return (\r\n        <svg\r\n          onClick={onLikeClick}\r\n          aria-label=\"Unlike\"\r\n          className=\"_8-yf5 \"\r\n          fill=\"#ed4956\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 48 48\"\r\n          width=\"24\"\r\n        >\r\n          <path d=\"M34.6 3.1c-4.5 0-7.9 1.8-10.6 5.6-2.7-3.7-6.1-5.5-10.6-5.5C6 3.1 0 9.6 0 17.6c0 7.3 5.4 12 10.6 16.5.6.5 1.3 1.1 1.9 1.7l2.3 2c4.4 3.9 6.6 5.9 7.6 6.5.5.3 1.1.5 1.6.5s1.1-.2 1.6-.5c1-.6 2.8-2.2 7.8-6.8l2-1.8c.7-.6 1.3-1.2 2-1.7C42.7 29.6 48 25 48 17.6c0-8-6-14.5-13.4-14.5z\"></path>\r\n        </svg>\r\n      );\r\n    } else {\r\n      return (\r\n        <svg\r\n          onClick={onLikeClick}\r\n          aria-label=\"Like\"\r\n          className=\"icon\"\r\n          fill=\"#262626\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 48 48\"\r\n          width=\"24\"\r\n        >\r\n          <path d=\"M34.6 6.1c5.7 0 10.4 5.2 10.4 11.5 0 6.8-5.9 11-11.5 16S25 41.3 24 41.9c-1.1-.7-4.7-4-9.5-8.3-5.7-5-11.5-9.2-11.5-16C3 11.3 7.7 6.1 13.4 6.1c4.2 0 6.5 2 8.1 4.3 1.9 2.6 2.2 3.9 2.5 3.9.3 0 .6-1.3 2.5-3.9 1.6-2.3 3.9-4.3 8.1-4.3m0-3c-4.5 0-7.9 1.8-10.6 5.6-2.7-3.7-6.1-5.5-10.6-5.5C6 3.1 0 9.6 0 17.6c0 7.3 5.4 12 10.6 16.5.6.5 1.3 1.1 1.9 1.7l2.3 2c4.4 3.9 6.6 5.9 7.6 6.5.5.3 1.1.5 1.6.5.6 0 1.1-.2 1.6-.5 1-.6 2.8-2.2 7.8-6.8l2-1.8c.7-.6 1.3-1.2 2-1.7C42.7 29.6 48 25 48 17.6c0-8-6-14.5-13.4-14.5z\"></path>\r\n        </svg>\r\n      );\r\n    }\r\n  }\r\n\r\n  const likesSpan = (numLikes) => {\r\n    if (numLikes === 1) {\r\n      return <span className=\"numLikes\"> {numLikes} like </span>;\r\n    } else {\r\n      return <span className=\"numLikes\"> {numLikes} likes </span>;\r\n    }\r\n  }\r\n\r\n  const getProfilePictureRef = async () => {\r\n    const profilePictureRef = await storageService\r\n      .ref()\r\n      .child(postObj.creatorId + \"/profile\");\r\n    setProfilePicture(blankProfile)\r\n    profilePictureRef.getDownloadURL().then((url) => {\r\n      setProfilePicture(url);\r\n    });\r\n  };\r\n  \r\n  return (\r\n    <div className=\"postContainer\">\r\n      <div className=\"topInfo\">\r\n        <div className=\"profileImageSmallCropper\">\r\n          <img\r\n            src={profilePicture}\r\n            className=\"profilePictureSmall\"\r\n            alt=\"Profile\"\r\n          />\r\n        </div>\r\n        <div className=\"topInfoRight\">\r\n          <div className=\"topInfoText\">\r\n            <span className=\"creatorName\">{postObj.creatorDisplayName}</span>\r\n            <span className=\"location\">{postObj.location}</span>\r\n          </div>\r\n\r\n          {isOwner ? (\r\n            <div className=\"deletePostButton\">\r\n              <img\r\n                onClick={onDeleteClick}\r\n                src={editLogo}\r\n                alt=\"Edit Post\"\r\n                width=\"18px\"\r\n              />\r\n            </div>\r\n          ) : (\r\n            <div />\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {postObj.attachmentUrl && (\r\n        <img\r\n          alt=\"post\"\r\n          src={postObj.attachmentUrl}\r\n          width=\"360px\"\r\n          height=\"360px\"\r\n        />\r\n      )}\r\n      <div className=\"middleInfo\">\r\n        <div className=\"postIcons\">{likeButton(postObj.likedUsers)}</div>\r\n        {/* <svg\r\n          aria-label=\"Comment\"\r\n          className=\"icon\"\r\n          fill=\"#262626\"\r\n          height=\"24\"\r\n          viewBox=\"0 0 48 48\"\r\n          width=\"24\"\r\n        >\r\n          <path\r\n            clip-rule=\"evenodd\"\r\n            d=\"M47.5 46.1l-2.8-11c1.8-3.3 2.8-7.1 2.8-11.1C47.5 11 37 .5 24 .5S.5 11 .5 24 11 47.5 24 47.5c4 0 7.8-1 11.1-2.8l11 2.8c.8.2 1.6-.6 1.4-1.4zm-3-22.1c0 4-1 7-2.6 10-.2.4-.3.9-.2 1.4l2.1 8.4-8.3-2.1c-.5-.1-1-.1-1.4.2-1.8 1-5.2 2.6-10 2.6-11.4 0-20.6-9.2-20.6-20.5S12.7 3.5 24 3.5 44.5 12.7 44.5 24z\"\r\n            fill-rule=\"evenodd\"\r\n          ></path>\r\n        </svg> */}\r\n        {likesSpan(postObj.likedUsers.length)}\r\n      </div>\r\n      <span className=\"caption\">{postObj.caption}</span>\r\n      <span className=\"location\">{}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post","C:\\Users\\17034\\Projects\\finsta\\src\\index.tsx",[],"C:\\Users\\17034\\Projects\\finsta\\src\\components\\AuthForm.tsx",[],"C:\\Users\\17034\\Projects\\finsta\\src\\components\\Router.tsx",[],"C:\\Users\\17034\\Projects\\finsta\\src\\components\\App.tsx",[],"C:\\Users\\17034\\Projects\\finsta\\src\\routes\\Home.tsx",[],"C:\\Users\\17034\\Projects\\finsta\\src\\firebase.js",[],"C:\\Users\\17034\\Projects\\finsta\\src\\components\\PostForm.tsx",["49"],{"ruleId":"50","severity":1,"message":"51","line":56,"column":7,"nodeType":"52","messageId":"53","endLine":56,"endColumn":20},{"ruleId":"54","severity":1,"message":"55","line":17,"column":6,"nodeType":"56","endLine":17,"endColumn":8,"suggestions":"57"},{"ruleId":"50","severity":1,"message":"58","line":21,"column":13,"nodeType":"52","messageId":"53","endLine":21,"endColumn":21},"@typescript-eslint/no-unused-vars","'attachmentUrl' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getProfilePictureRef'. Either include it or remove the dependency array.","ArrayExpression",["59"],"'response' is assigned a value but never used.",{"desc":"60","fix":"61"},"Update the dependencies array to be: [getProfilePictureRef]",{"range":"62","text":"63"},[500,502],"[getProfilePictureRef]"]